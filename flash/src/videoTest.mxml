<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" creationComplete="init();" width="340" height="320">
	<mx:Style>
		Alert{font-size:12px;}
	</mx:Style>
	<mx:Script>
		<![CDATA[
		import mx.controls.Alert;
		import mx.core.Application;
		import mx.core.FlexGlobals;
		import mx.events.CloseEvent;
		import mx.events.SliderEvent;
		import mx.events.VideoEvent;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.http.HTTPService;

		private var str:String;
		private var videoPro:Video;
		private var camera:Camera;
		private var inNs:NetStream;
		private var outNs:NetStream;
		private var nc:NetConnection;
		private var m_pictureBitmapData:BitmapData //定义视频截图
		private static const DEFAULT_CAMERA_WIDTH:Number = 320; //摄像头显示宽度
		private static const DEFAULT_CAMERA_HEIGHT:Number = 240; //摄像头显示高度
		[Bindable]
		private var m_pictureData:String;

		private var lastvideodeoName:String = "";   //视频录制后保存的名字
		private var _videoPathSaveActionUrl:String = ""; //保存视频文件名的服务接口
		private var index:int = 0; //系统标识，0标识没有连接视频服务，1标识已连接视频服务

		private var videoDomainNameDefault:String = "video.eloancn.com";//默认的视频域名
		private var videoDomainName:String;//可用的视频域名(从服务端获取)
		private var rtmp:String = "rtmp://";//视频服务协议头
		private var videoAuth:String = "/videoAuth";//视频服务名字

		private var serverDomainName:String;//上传服务端域名
		private var serverForSaveVideoUrl:String;//保存视频接口
										
		public function init():void{
			setupcameraera();    //初始化摄像头信息
			var parameters:Object = FlexGlobals.topLevelApplication.parameters;

			serverDomainName = parameters.serverDomainName;
			serverForSaveVideoUrl = parameters.serverForSaveVideoUrl;
			videoDomainName=parameters.videoDomainName;
						
			//验证参数
			if(serverDomainName==null || serverDomainName == ''
					|| serverForSaveVideoUrl == null || serverForSaveVideoUrl == ''
					|| videoDomainName == null || videoDomainName == ''){
				Alert.show("系统参数有误，请联系我们！","提示：",Alert.OK);
				startRec.enabled = false;
			}
			
			t_ws_SaveVideo.url = serverDomainName+serverForSaveVideoUrl;
		}

		//初始化摄像头信息
		public function setupcameraera():void{
			//启动摄像头
			camera = Camera.getCamera();
			camera.currentFPS
			if(camera != null){
				camera.addEventListener(StatusEvent.STATUS,onStatusHandler);
				camera.setMode(DEFAULT_CAMERA_WIDTH,DEFAULT_CAMERA_HEIGHT,30);
				camera.setQuality(0,85);  //设置清晰度
				videoPro = new Video();
				videoPro.width = 320;
				videoPro.height = 240;
				videoPro.attachCamera(camera);
				t_vd_Video.addChild(videoPro);
			}else{
				Alert.show("错误：无法链接到活动摄像头！","提示：",Alert.OK);
				startRec.enabled = false;
			}
		}

		//摄像头使用监控事件
		public function onStatusHandler(event:StatusEvent):void{
			//判断摄像头存不存在
			if(!camera.muted){
				startRec.enabled = true;
			}else{
				Alert.show("您拒绝使用摄像头，无法使用拍照功能！","提示：",Alert.OK);
				startRec.enabled = false;
			}
			camera.removeEventListener(StatusEvent.STATUS,onStatusHandler);
		}

		//录制视频
		public function clickConnect(evt:MouseEvent):void{
			//连接red5服务器
			nc = new NetConnection();
			nc.addEventListener(NetStatusEvent.NET_STATUS,nsHandler);
			nc.connect(rtmp+videoDomainName+videoAuth);
		}


		public function nsHandler(evt:NetStatusEvent):void{

			//如果连接成功
			if (evt.info.code == "NetConnection.Connect.Success"){
				//开始录制视频
				playClick();
			}
			//连接失败
			else{
				Alert.show("链接失败！");
			}
		}
				
		//开始录制视频
		public function playClick():void{
			if(videoPro != null){
				videoPro.clear();
				t_vd_Video.removeChild(videoPro);
			}
			videoPro = new Video();
			videoPro.width = 320;
			videoPro.height = 240;
			videoPro.attachCamera(camera);
			t_vd_Video.addChild(videoPro);
			outNs = new NetStream(nc);
			outNs.attachCamera(camera);   //把摄像头存入outNs
			outNs.attachAudio(Microphone.getMicrophone());
			//outNs.attachAudio(mic);     //把麦克风存入outNs
			lastvideodeoName = "REPLAY" + Math.random();
			outNs.publish(lastvideodeoName, "record");
			startRec.enabled = false;
			stopRec.enabled = true;
			playVod.enabled = false;
			submit.enabled = false;
		}

		public function stopClick(evt:MouseEvent):void{
			//关闭ns与red5的连接
			if(outNs != null){
				outNs.close();
			}

			if(inNs != null){
				inNs.close();
			}

			videoPro.clear();
			t_vd_Video.removeChild(videoPro);
			videoPro = null;

			//锁定开始按键使其生效
			startRec.enabled = true;

			//锁定停止按键使其失效
			stopRec.enabled = false;
			playVod.enabled = true;
			submit.enabled = true;
		}
		
		//播放视频
		private function playLastvideo(evt:MouseEvent):void{
			if(nc!=null){
				//addEventListener(Event.ENTER_FRAME,onEnterFrame);
				inNs = new NetStream(nc);
				var clientobj:Object=new Object();
				clientobj.onMetaData=function():void{};
				clientobj.onPlayStatus=doComplete;
				inNs.client=clientobj;

				//删除原_localvideodeo，便于在录制和播放视频之间切换
				videoPro = new Video();
				videoPro.width = 320;
				videoPro.height = 240;
				videoPro.attachNetStream(inNs);
				t_vd_Video.addChild(videoPro);
				inNs.play(lastvideodeoName+".flv");
			}
			startRec.enabled = false;
			stopRec.enabled = true;
			playVod.enabled = false;
			submit.enabled = false;
		}
		
		private function doComplete(evt:Object):void{
			startRec.enabled = true;
			stopRec.enabled = false;
			playVod.enabled = true;
			submit.enabled = true;
		}
		
		//提交保存视频
		private function submitVideo(evt:MouseEvent):void{
			Alert.show("确认保存视频。","提示：",Alert.OK|Alert.NO,this,function(evtIn:CloseEvent):void{
				if(evtIn.detail == Alert.OK)
				{
					var params:URLVariables = new URLVariables();
					params.videoFilePathTemp = lastvideodeoName;
					params.videoDoMainName = videoDomainName;
					t_ws_SaveVideo.send(params);
				}
			});
		}
			
		//连接WebService失败事件
		public function onSaveVideoFault(event:FaultEvent):void
		{
//			Alert.show("保存失败，请重试！","提示",Alert.OK);
			Alert.show(event.fault.toString(),"提示",Alert.OK);
		}

		//WebService保存视频成功事件
		private function onSaveVideoResult(event:ResultEvent):void
		{
			var json:Object = new Object();
			if(event.result != null && event.result.toString() != null){
				json = JSON.parse(event.result.toString());
			}
			
			//返回处理结果正常，并且有视频文件路径
			var tip:String = json.tip;
			var code:String = json.code;
			var videoPath:String = json.returnResult; 
			if(code == '0000' && videoPath != null && videoPath != ''){
				Alert.show("测试成功");
			}
				//返回不为空时，则系统程序有问题，给予用户提示
			else{
				Alert.show(tip);
			}
		}
		
		]]>
	</mx:Script>
	
	<mx:HTTPService url="" id="t_ws_SaveVideo" resultFormat="text" showBusyCursor="true" method="POST" useProxy="false" result="onSaveVideoResult(event)" fault="onSaveVideoFault(event)"/>
	<mx:Panel cornerRadius="1" width="340" height="320" layout="absolute" borderAlpha="1">
		<mx:VideoDisplay id="t_vd_Video" width="320" height="240"/>
		<mx:ControlBar horizontalAlign="center">
			<mx:Button id="startRec" label="开始录制" click="this.clickConnect(event);" enabled="true" />   
			<mx:Button id="stopRec" label="停止录制" click="this.stopClick(event);" enabled="false" />   
			<mx:Button id="playVod" label="播放" click="this.playLastvideo(event);" enabled="false" />
			<mx:Button id="submit" label="提交" click="this.submitVideo(event);" enabled="false" />
		</mx:ControlBar>
	</mx:Panel>
</mx:Application>
